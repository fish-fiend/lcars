% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radio.R
\name{lcarsRadio}
\alias{lcarsRadio}
\title{LCARS radio buttons}
\usage{
lcarsRadio(inputId, label, choices = NULL, selected = NULL,
  inline = FALSE, width = NULL, choiceNames = NULL,
  choiceValues = NULL, label_color = "#FFFFFF",
  choice_color = label_color)
}
\arguments{
\item{inputId}{character, the input slot that will be used to access the value.}

\item{label}{character, display label for the control, or \code{NULL} for no label.}

\item{choices}{see \code{shiny::radioButtons} for details.}

\item{selected}{The initially selected value (if not specified then defaults to the first value).}

\item{inline}{If \code{TRUE}, render the choices inline (i.e. horizontally).}

\item{width}{a valid CSS unit.}

\item{choiceNames}{see \code{shiny::radioButtons} for details.}

\item{choiceValues}{see \code{shiny::radioButtons} for details.}

\item{label_color}{Label color. Can be any color given in hex format. Named colors must be LCARS colors. See \code{\link{lcarsdata}} for options.}

\item{choice_color}{choice text color, as above.}
}
\value{
A set of radio buttons that can be added to a UI definition.
}
\description{
A minimal replacement for \code{radioButtons} that provides two additional color arguments for consistency with functions like \code{lcarsCheckbox}.
}
\examples{
## Only run examples in interactive R sessions
if (interactive()) {

  ui <- lcarsPage(
    lcarsRadio("dist", "Distribution type:",
                 c("Normal" = "norm",
                   "Uniform" = "unif",
                   "Log-normal" = "lnorm",
                   "Exponential" = "exp"),
               label_color = "lilac",
               choice_color = "atomic-tangerine"
              ),
    plotOutput("distPlot")
  )

  server <- function(input, output) {
    output$distPlot <- renderPlot({
      dist <- switch(input$dist,
                     norm = rnorm,
                     unif = runif,
                     lnorm = rlnorm,
                     exp = rexp,
                     rnorm)

      hist(dist(500))
    })
  }

  shinyApp(ui, server)
}
}
